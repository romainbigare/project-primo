{"version":3,"file":"index.mjs","sources":["../../src/panel/BasePanel.vue","../../src/panel/Panel.vue","../../src/panel/Panel.vue?vue&type=template&id=7d3373aa&lang.js"],"sourcesContent":["<script>\nimport BaseComponent from '@primevue/core/basecomponent';\nimport PanelStyle from 'primevue/panel/style';\n\nexport default {\n    name: 'BasePanel',\n    extends: BaseComponent,\n    props: {\n        header: String,\n        toggleable: Boolean,\n        collapsed: Boolean,\n        toggleButtonProps: {\n            type: Object,\n            default: () => {\n                return {\n                    severity: 'secondary',\n                    text: true,\n                    rounded: true\n                };\n            }\n        }\n    },\n    style: PanelStyle,\n    provide() {\n        return {\n            $pcPanel: this,\n            $parentInstance: this\n        };\n    }\n};\n</script>\n","<template>\n    <div :class=\"cx('root')\" v-bind=\"ptmi('root')\">\n        <div :class=\"cx('header')\" v-bind=\"ptm('header')\">\n            <slot :id=\"$id + '_header'\" name=\"header\" :class=\"cx('title')\">\n                <span v-if=\"header\" :id=\"$id + '_header'\" :class=\"cx('title')\" v-bind=\"ptm('title')\">{{ header }}</span>\n            </slot>\n            <div :class=\"cx('headerActions')\" v-bind=\"ptm('headerActions')\">\n                <slot name=\"icons\"></slot>\n                <Button\n                    v-if=\"toggleable\"\n                    :id=\"$id + '_header'\"\n                    :class=\"cx('pcToggleButton')\"\n                    :aria-label=\"buttonAriaLabel\"\n                    :aria-controls=\"$id + '_content'\"\n                    :aria-expanded=\"!d_collapsed\"\n                    :unstyled=\"unstyled\"\n                    @click=\"toggle\"\n                    @keydown=\"onKeyDown\"\n                    v-bind=\"toggleButtonProps\"\n                    :pt=\"ptm('pcToggleButton')\"\n                >\n                    <template #icon=\"slotProps\">\n                        <!--TODO: togglericon deprecated since v4.0-->\n                        <slot :name=\"$slots.toggleicon ? 'toggleicon' : 'togglericon'\" :collapsed=\"d_collapsed\">\n                            <component :is=\"d_collapsed ? 'PlusIcon' : 'MinusIcon'\" :class=\"slotProps.class\" v-bind=\"ptm('pcToggleButton')['icon']\" />\n                        </slot>\n                    </template>\n                </Button>\n            </div>\n        </div>\n        <transition name=\"p-toggleable-content\" v-bind=\"ptm('transition')\">\n            <div v-show=\"!d_collapsed\" :id=\"$id + '_content'\" :class=\"cx('contentContainer')\" role=\"region\" :aria-labelledby=\"$id + '_header'\" v-bind=\"ptm('contentContainer')\">\n                <div :class=\"cx('content')\" v-bind=\"ptm('content')\">\n                    <slot></slot>\n                </div>\n                <div v-if=\"$slots.footer\" :class=\"cx('footer')\" v-bind=\"ptm('footer')\">\n                    <slot name=\"footer\"></slot>\n                </div>\n            </div>\n        </transition>\n    </div>\n</template>\n\n<script>\nimport MinusIcon from '@primevue/icons/minus';\nimport PlusIcon from '@primevue/icons/plus';\nimport Button from 'primevue/button';\nimport Ripple from 'primevue/ripple';\nimport BasePanel from './BasePanel.vue';\n\nexport default {\n    name: 'Panel',\n    extends: BasePanel,\n    inheritAttrs: false,\n    emits: ['update:collapsed', 'toggle'],\n    data() {\n        return {\n            d_collapsed: this.collapsed\n        };\n    },\n    watch: {\n        collapsed(newValue) {\n            this.d_collapsed = newValue;\n        }\n    },\n    methods: {\n        toggle(event) {\n            this.d_collapsed = !this.d_collapsed;\n            this.$emit('update:collapsed', this.d_collapsed);\n            this.$emit('toggle', {\n                originalEvent: event,\n                value: this.d_collapsed\n            });\n        },\n        onKeyDown(event) {\n            if (event.code === 'Enter' || event.code === 'NumpadEnter' || event.code === 'Space') {\n                this.toggle(event);\n                event.preventDefault();\n            }\n        }\n    },\n    computed: {\n        buttonAriaLabel() {\n            return this.toggleButtonProps && this.toggleButtonProps.ariaLabel ? this.toggleButtonProps.ariaLabel : this.header;\n        }\n    },\n    components: {\n        PlusIcon,\n        MinusIcon,\n        Button\n    },\n    directives: {\n        ripple: Ripple\n    }\n};\n</script>\n","<template>\n    <div :class=\"cx('root')\" v-bind=\"ptmi('root')\">\n        <div :class=\"cx('header')\" v-bind=\"ptm('header')\">\n            <slot :id=\"$id + '_header'\" name=\"header\" :class=\"cx('title')\">\n                <span v-if=\"header\" :id=\"$id + '_header'\" :class=\"cx('title')\" v-bind=\"ptm('title')\">{{ header }}</span>\n            </slot>\n            <div :class=\"cx('headerActions')\" v-bind=\"ptm('headerActions')\">\n                <slot name=\"icons\"></slot>\n                <Button\n                    v-if=\"toggleable\"\n                    :id=\"$id + '_header'\"\n                    :class=\"cx('pcToggleButton')\"\n                    :aria-label=\"buttonAriaLabel\"\n                    :aria-controls=\"$id + '_content'\"\n                    :aria-expanded=\"!d_collapsed\"\n                    :unstyled=\"unstyled\"\n                    @click=\"toggle\"\n                    @keydown=\"onKeyDown\"\n                    v-bind=\"toggleButtonProps\"\n                    :pt=\"ptm('pcToggleButton')\"\n                >\n                    <template #icon=\"slotProps\">\n                        <!--TODO: togglericon deprecated since v4.0-->\n                        <slot :name=\"$slots.toggleicon ? 'toggleicon' : 'togglericon'\" :collapsed=\"d_collapsed\">\n                            <component :is=\"d_collapsed ? 'PlusIcon' : 'MinusIcon'\" :class=\"slotProps.class\" v-bind=\"ptm('pcToggleButton')['icon']\" />\n                        </slot>\n                    </template>\n                </Button>\n            </div>\n        </div>\n        <transition name=\"p-toggleable-content\" v-bind=\"ptm('transition')\">\n            <div v-show=\"!d_collapsed\" :id=\"$id + '_content'\" :class=\"cx('contentContainer')\" role=\"region\" :aria-labelledby=\"$id + '_header'\" v-bind=\"ptm('contentContainer')\">\n                <div :class=\"cx('content')\" v-bind=\"ptm('content')\">\n                    <slot></slot>\n                </div>\n                <div v-if=\"$slots.footer\" :class=\"cx('footer')\" v-bind=\"ptm('footer')\">\n                    <slot name=\"footer\"></slot>\n                </div>\n            </div>\n        </transition>\n    </div>\n</template>\n\n<script>\nimport MinusIcon from '@primevue/icons/minus';\nimport PlusIcon from '@primevue/icons/plus';\nimport Button from 'primevue/button';\nimport Ripple from 'primevue/ripple';\nimport BasePanel from './BasePanel.vue';\n\nexport default {\n    name: 'Panel',\n    extends: BasePanel,\n    inheritAttrs: false,\n    emits: ['update:collapsed', 'toggle'],\n    data() {\n        return {\n            d_collapsed: this.collapsed\n        };\n    },\n    watch: {\n        collapsed(newValue) {\n            this.d_collapsed = newValue;\n        }\n    },\n    methods: {\n        toggle(event) {\n            this.d_collapsed = !this.d_collapsed;\n            this.$emit('update:collapsed', this.d_collapsed);\n            this.$emit('toggle', {\n                originalEvent: event,\n                value: this.d_collapsed\n            });\n        },\n        onKeyDown(event) {\n            if (event.code === 'Enter' || event.code === 'NumpadEnter' || event.code === 'Space') {\n                this.toggle(event);\n                event.preventDefault();\n            }\n        }\n    },\n    computed: {\n        buttonAriaLabel() {\n            return this.toggleButtonProps && this.toggleButtonProps.ariaLabel ? this.toggleButtonProps.ariaLabel : this.header;\n        }\n    },\n    components: {\n        PlusIcon,\n        MinusIcon,\n        Button\n    },\n    directives: {\n        ripple: Ripple\n    }\n};\n</script>\n"],"names":["name","BaseComponent","props","header","String","toggleable","Boolean","collapsed","toggleButtonProps","type","Object","default","severity","text","rounded","style","PanelStyle","provide","$pcPanel","$parentInstance","BasePanel","inheritAttrs","emits","data","d_collapsed","watch","newValue","methods","toggle","event","$emit","originalEvent","value","onKeyDown","code","preventDefault","computed","buttonAriaLabel","ariaLabel","components","PlusIcon","MinusIcon","Button","directives","ripple","Ripple","_openBlock","_createElementBlock","_mergeProps","_ctx","cx","ptmi","_createElementVNode","ptm","_renderSlot","$slots","id","$id","_createBlock","_component_Button","$options","$data","unstyled","onClick","onKeydown","pt","icon","_withCtx","slotProps","toggleicon","_resolveDynamicComponent","_createVNode","_Transition","_withDirectives","role","footer"],"mappings":"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"}